[
  {
    "instance_id": "marshmallow-code__marshmallow-1359",
    "model_name_or_path": "gpt-4o",
    "model_patch": "```diff\ndiff --git a/src/marshmallow/fields.py b/src/marshmallow/fields.py\nindex 7292acf..03d17e3 100644\n--- a/src/marshmallow/fields.py\n+++ b/src/marshmallow/fields.py\n@@ -1466,7 +1466,9 @@ class List(Field):\n \n     def _bind_to_schema(self, field_name, schema):\n         super()._bind_to_schema(field_name, schema)\n-        self.inner._bind_to_schema(field_name, self)\n+        if hasattr(self.inner, '_bind_to_schema'):\n+            self.inner = copy.deepcopy(self.inner)\n+            self.inner._bind_to_schema(field_name, self)\n         if isinstance(self.inner, Nested):\n             self.inner.only = self.only\n             self.inner.exclude = self.exclude\n```"
  },
  {
    "instance_id": "marshmallow-code__marshmallow-1343",
    "model_name_or_path": "gpt-4o",
    "model_patch": "```diff\ndiff --git a/src/marshmallow/schema.py b/src/marshmallow/schema.py\nindex 1234567..89abcde 100644\n--- a/src/marshmallow/schema.py\n+++ b/src/marshmallow/schema.py\n@@ -875,7 +875,7 @@ def _invoke_field_validators(self, unmarshal, data, many):\n                             getter_func=validator,\n                             data=value,\n                             field_name=field_obj.load_from or field_name,\n-                            field_obj=field_obj\n+                            field_obj=field_obj,\n                             index=(idx if self.opts.index_errors else None)\n                         )\n                         if validated_value is missing:\n@@ -896,7 +896,8 @@ def _invoke_field_validators(self, unmarshal, data, many):\n \n     def _invoke_validators(\n             self, unmarshal, pass_many, data, original_data, many, field_errors=False):\n-        errors = {}\n+        if data is None:\n+            return\n         errors = {}\n         for attr_name in self.__processors__[(VALIDATES_SCHEMA, pass_many)]:\n             validator = getattr(self, attr_name)\n```\n"
  }
]